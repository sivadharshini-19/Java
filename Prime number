imprport java.util.Scanner;

public class PrimeNumber {
    
    public static void main(String[] args) {
        // Create a scanner object to read input
        Scanner scanner = new Scanner(System.in);
        
        // Prompt the user to enter a number
        System.out.print("Enter a number: ");
        int number = scanner.nextInt();
        
        // Close the scanner
        scanner.close();
        
        // Check if the number is prime
        if (isPrime(number)) {
            System.out.println(number + " is a prime number.");
        } else {
            System.out.println(number + " is not a prime number.");
        }
    }
    
    // Method to check if a number is prime
    public static boolean isPrime(int num) {
        // Handle edge cases for numbers less than 2
        if (num <= 1) {
            return false;
        }
        
        // Check if any number from 2 to the square root of num divides it
        for (int i = 2; i <= Math.sqrt(num); i++) {
            if (num % i == 0) {
                return false;  // num is divisible by i, so it's not prime
            }
        }
        
        // If no divisors were found, num is prime
        return true;
    }
}Here's a simple Java program to check if a given number is a prime number:

```java
import java.util.Scanner;

public class PrimeNumber {
    
    public static void main(String[] args) {
        // Create a scanner object to read input
        Scanner scanner = new Scanner(System.in);
        
        // Prompt the user to enter a number
        System.out.print("Enter a number: ");
        int number = scanner.nextInt();
        
        // Close the scanner
        scanner.close();
        
        // Check if the number is prime
        if (isPrime(number)) {
            System.out.println(number + " is a prime number.");
        } else {
            System.out.println(number + " is not a prime number.");
        }
    }
    
    // Method to check if a number is prime
    public static boolean isPrime(int num) {
        // Handle edge cases for numbers less than 2
        if (num <= 1) {
            return false;
        }
        
        // Check if any number from 2 to the square root of num divides it
        for (int i = 2; i <= Math.sqrt(num); i++) {
            if (num % i == 0) {
                return false;  // num is divisible by i, so it's not prime
            }
        }
        
        // If no divisors were found, num is prime
        return true;
    }
}
